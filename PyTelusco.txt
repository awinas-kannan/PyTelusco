Py - Telusco

https://github.com/navinreddy20/Python-

Any Py Files is module ?


### 46 & 47

Special Variable :
 -> __NAME__

What ever is start point file in PY.. it will print __main__ when __name__ is called..

If some other module is imported into other module... it will print the module's name...

Once a module is imported.. everything will be executed in that module..



### 48/49 - OOPs!!!!!

   Py Supports OOP
   Functional Programming
   Procedure oriented Programming

Class & Object



Class :
  Attributes (properties)
  Behaviours (functions/methods)
print(type(c1)) -> <class '__main__.computer'>  
  
How to call method :

c1 = computer()
c1.config()

computer.config(c1)

 ### 50 __init__ method

  Used while instantiating an object..

### 51 Constructor ,Self ,Comparing Objects
  
Heap -> All objects
c1 = computer()
c2 = computer()
print(id(c1))
print(id(c2))

self in py == this in java


### 52 Types of Variable..

Class Variable..
Instance Variable..
(Check the course era example)

Class namespace vs Instnce namespace:
Class ns : place whr class variables are stored
Int ns : place whr instance vars are stored


### 53 Types of methods
Instance method
Class methods
Static methods

cls vs self..
when working with class attrs use cls
  cls.ATTRIBUTE_NAME

Use @classmethod for class methods

static variabe=le :
 ->Not concerned abt class & instance variables
 ->Dont use self/cls in methond
 ->@staticmethod

### 54 Inner class

InnerClass.py

### 55 Inheritance

Class A:
Class B(A):
Class C:
Class D(B,C):

singel/multi level/multiple

### 56 Constructor Inheritance

How Constructo behaved in Inheritance::

In Single level inheritace... 
  When super.__init is used
  Consuructor of Super clas will be called when creating object of sub class

  If B extends A .. And b has constructor..
  then when creating object of B.. Consturctor of A will not be called

  If B extends A .. And b has NO constructor..
  then when creating object of B.. Consturctor of A will be called

MRO -> Method resolution order:
used in Multiple inheriance..
Then Once menthioned first in the bracket will have high priority

Class C(A,B):


### 57 Polymorphism

One name many forms..
1)Duck Typying
2)Operator Overloading
3)Method overloading
4)Method overriding..

### 58 Duck Typying
  -> Behaviour that matached with duck..
  -> 

x = 10
x = 'Awians'

int memorry is assigned with anme x
then string memory is assigned with name x

Unlike other programming languages , we aint mentioning The TYPE in methods...

Ref DuckTyping.py//
 -> ide is duck typed there..
  -> Its enough if the execure method is presnet on your IDE...

If its java.. then we will create interface . then we will implement it in Pycharm & Juniper... then only we will be able to use the exec method..


### 59 Operator Overloading

override __add__ ,__gt__ , __str

## 60  Method overloading & overriding...

Method overloading cant be done direcly - cus it doesnt support in python

https://www.geeksforgeeks.org/python-method-overloading/

Multiple dispatch decorator


** 61 Abstract Classes

Use pass keywords to say i d have anything...
from abc import ABC,abstractmethod


## 61 Iterator
for loop interannly uses __next__ function
To implement your own iter
 -> ADD __iter__ (Gives u the obj of iterator)
 -> ADD __next__


## 62 Generator
yield keyword makes your function a generator
Generatro gives us iterators

## 63 Exception Handling
Check Coursera Repo..

## 64 Multi threading
from threading import *
from time import  sleep
Main thread..
t1 thread
t2 thread..

bye will be printed cuz its in main thread..
start () will internally call run

join()..

## 65 File Handling
Check Coursera repo
rb -> read binary ( for images)

## 66 Comments

#  -> Single line commnet

Use the below for documentation
""" 
awinas 
"""

## 67 Is Python Compuled or Interpreted lang

Its both compiled & interpreted language...

Source code -> compiler -> byte code -> interpreter (Python Virtual Machine)-> Machine Language

PVM -> Python Virtual Machine
JVM -> Java Virtual Machine

cpython ( py implementd in c)
jython (java version of python)
ironpython ( C# version of python)


## Algorithms 

## 68 Linear search # 69 Binary serach #70 Bubble Sort #71 Selection sort 



############################ DJANGO UnCHained
##1 Django

The django - 
Django is based on MVT(Model View Template architecture) which is based on the MVC(Model View Controller architecture). The common difference between them is that Django take care of controller part.

Why Django :
 -> Has lot of components
 -> Security
 -> Scalable
 -> 

 ##2 Django - Setup
 pip3 install virtualenv
 pip3 show virtualenv

 Below two steps are not required..when creating proj with Pycharm
 pip3 install virtualenv
 pip3 install virtualenvwrapper
 pip3 install virtualenvwrapper-win

pip3 show virtualenv
mkvirtualenv test
pip install django
django-admin --version 
django-admin startproject DjangoUnchained
python manage.py runserver

http://localhost:8000/
http://127.0.0.1:8000/

wsgi -> used to deploy project on prod server
urls -> Cuz its web app
manage.py 
setting.py
Refer ###### Virtual Environment

Steps :
pip3 show virtualenv


 -> pip3 install virtualenvwrapper-win



##3 First App in Django

Visual Studio Code...

Project vs APP

Project Ecomm Site
 APP:
  -> Login
  -> Products
  -> Orders
  -> Checkout
  -> Shipping


How to use already exiting Virtual env ?
workon <ENV_NAME>

Creating APP : python3 manage.py startapp calc

admin.py 
apps.py
models.py (Used while working with ORM)
views.py

####### 4 First APP Django -2


How Django works ?
 -> Search for URL mapping
  urls.py
  views.py  

######## 5 Django tutorials | Django Template Language | DTL

import od in settings..

IN Settings.py file 
 -> TEMPLATES =[
    'DIRS' : [os.path.join(BASE_DIR,'templates')]
   ]

jinja extension


#6 Django tutorials | Django Template Language - part 2
NR

#7 Django tutorials | Addition of Two Numbers in Django

#8 Django tutorials | GET vs POST | HTTP Methods

POST:
Reason given for failure:
CSRF token missing.
settings.py -> miffleware -> csrf already present

#9 Django tutorials | Model View Template in Django | MVT

seperation of concern
mvt vs mvc
Model -- Model
View -- Controllee
Template -- View

class Destination:
 id : int
 name : str
 img :  str
 desc : str
 price : int
 offer : bool

#10 Django tutorials | Static Files - 1
Download template from internet
travellor colorlib

#11 Django tutorials | Static Files - 2

Put the js / images  /css cntents on static folder...
check STATIC_URL IN setting.py

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, '/static')
]
STATIC_ROOT = os.path.join(BASE_DIR, 'assets')

python3 manage.py collectstatic

#12 Django tutorials | Passing Dynamic Data in Html part 1

Used OOPS to pass the Dynamic Data...

#13 Django tutorials | Passing Dynamic Data in Html - part 2
#14 Django tutorials | If Statement

#15 Django tutorials | ORM | Object Relational Mapper | Theory

#16 Django tutorials | Postgres and PgAdmin Setup

#17 Django tutorials | Models and Migrations

Modify db setting ins Setting.py


$$$ Refer Django Model Field (ref django docs)

Connecting to DB

class Destination(models.model):
 name = models.CharField(max_length =100)
 img =  models.ImageField(uploadTo = 'pics')
 desc = models.textField()
 price = models.IntegerField()
 offer = models.BooleanField(default = False)

Migrate Models to DB::
python3 manage.py makemigration
python3 manage.py sqlmigrate travello 0001
python3 manage.py migrate

INSTALLED_APPS = [
travello.apps.TravelloConfig
]

#18 Django tutorials | Re-Migration

#19 Django tutorials | Admin Panel

# Register your models here.

admin.site.register(Destination)
python3 manage.py help
python3 manage.py createsuperuser
Username: kiran
Email address : connect@telusko.com
Password: 1234
Password (again): 1234
Bypass password validation and create user anyway? [y/N]: y
Superuser created successfully.

#20 Django tutorials | Add and Fetch data from Database

Destination.objects.all()

#21 Django tutorials | User Registration - 1


######
args and kwargs examples in Python.

https://www.geeksforgeeks.org/args-kwargs-python/

*args (Non-Keyword Arguments)
**kwargs (Keyword Arguments)

We use the “wildcard” or “*” notation like this – *args OR **kwargs – as our function’s argument when we have doubts about the number of  arguments we should pass in a function.” 


The special syntax **kwargs in function definitions in Python is used to pass a keyworded, variable-length argument list. We use the name kwargs with the double star. The reason is that the double star allows us to pass through keyword arguments (and any number of them).

*args receives arguments as a tuple.
**kwargs receives arguments as a dictionary.

https://github.com/onlyphantom/llm-python



###### Virtual Environment
Recommedation : new virtual environmnet for each project...

https://packaging.python.org/en/latest/guides/installing-using-pip-and-virtual-environments/

venv (for Python 3) allows you to manage separate package installations for different projects. It creates a “virtual” isolated Python installation. When you switch projects, you can create a new virtual environment which is isolated from other virtual environments. You benefit from the virtual environment since packages can be installed confidently and will not interfere with another project’s environment.

It is recommended to use a virtual environment when working with third party packages.Using *args and **kwargs in Python to set values of object


python3 -m venv .venv
source .venv/bin/activate



%%%%
https://www.coursera.org/learn/python-project-for-ai-application-development#outcomes
%%%%

Setup :

Nano ~/.zshrc
export WORKON_HOME=~/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/Library/Frameworks/Python.framework/Versions/3.12/bin/python3
export VIRTUALENVWRAPPER_VIRTUALENV=/Library/Frameworks/Python.framework/Versions/3.12/bin/virtualenv
export PATH=$PATH:${VIRTUALENVWRAPPER_VIRTUALENV}
source /Library/Frameworks/Python.framework/Versions/3.12/bin/virtualenvwrapper.sh
source ~/.zshrc

https://stackoverflow.com/questions/34611394/virtualenv-workon-command-not-found
https://stackoverflow.com/questions/49470367/install-virtualenv-and-virtualenvwrapper-on-macos
https://stackoverflow.com/questions/31274642/error-virtualenvwrapper-could-not-find-virtualenv-in-your-path

Py Commands:

python3 --version
pip3 --version
pip3 install --upgrade pip   
which virtualenv
which python3
pip3 install virtualenv
pip3 install virtualenvwrapper
pip3 install virtualenvwrapper-win
pip3 show virtualenv
lsvirtualenv -> List all virtual envs
mkvirtualenv test
workon test
deactivate
rmvirtualenv test

workon <ENV_NAME>

django-admin --version 
django-admin startproject DjangoUnchained
python manage.py runserver
python3 manage.py startapp calc


Move staic files::
python3 manage.py collectstatic


Migrate Models to DB::
python3 manage.py makemigration
python3 manage.py sqlmigrate travello 0001
python3 manage.py migrate


python3 manage.py help
python3 manage.py createsuperuser

a0m0rtj
1234